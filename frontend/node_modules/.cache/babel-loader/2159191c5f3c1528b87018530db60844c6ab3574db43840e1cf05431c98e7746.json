{"ast":null,"code":"var _jsxFileName = \"/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './TimeSaving.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TimeSaving() {\n  _s();\n  const [routes] = useState([{\n    source: 'Bengaluru',\n    destination: 'Hyderabad',\n    bestRoute: 'NH44 via Kurnool',\n    description: 'Avoids traffic bottlenecks and ensures smooth travel on NH44.',\n    mapsLink: 'https://www.google.com/maps/dir/Bengaluru/Hyderabad'\n  }, {\n    source: 'Hyderabad',\n    destination: 'Bengaluru',\n    bestRoute: 'NH44 via Kurnool',\n    description: 'Best return path via Kurnool with minimum delays.',\n    mapsLink: 'https://www.google.com/maps/dir/Hyderabad/Bengaluru'\n  }, {\n    source: 'Mumbai',\n    destination: 'Pune',\n    bestRoute: 'Mumbai-Pune Expressway',\n    description: 'A fast, toll-based expressway ideal for quick intercity trips.',\n    mapsLink: 'https://www.google.com/maps/dir/Mumbai/Pune'\n  }, {\n    source: 'Pune',\n    destination: 'Mumbai',\n    bestRoute: 'Mumbai-Pune Expressway',\n    description: 'The expressway provides a direct, time-saving return trip.',\n    mapsLink: 'https://www.google.com/maps/dir/Pune/Mumbai'\n  }, {\n    source: 'Chennai',\n    destination: 'Bengaluru',\n    bestRoute: 'NH48 via Vellore',\n    description: 'Best route with highway amenities and fewer diversions.',\n    mapsLink: 'https://www.google.com/maps/dir/Chennai/Bengaluru'\n  }, {\n    source: 'Bengaluru',\n    destination: 'Chennai',\n    bestRoute: 'NH48 via Vellore',\n    description: 'Smooth road and efficient travel using NH48.',\n    mapsLink: 'https://www.google.com/maps/dir/Bengaluru/Chennai'\n  }, {\n    source: 'Delhi',\n    destination: 'Agra',\n    bestRoute: 'Yamuna Expressway',\n    description: 'Straight and high-speed access to Agra.',\n    mapsLink: 'https://www.google.com/maps/dir/Delhi/Agra'\n  }, {\n    source: 'Agra',\n    destination: 'Delhi',\n    bestRoute: 'Yamuna Expressway',\n    description: 'Quick return trip with minimal interruptions.',\n    mapsLink: 'https://www.google.com/maps/dir/Agra/Delhi'\n  }, {\n    source: 'Kolkata',\n    destination: 'Durgapur',\n    bestRoute: 'NH19 via Dankuni',\n    description: 'Wide highway with smooth traffic.',\n    mapsLink: 'https://www.google.com/maps/dir/Kolkata/Durgapur'\n  }, {\n    source: 'Durgapur',\n    destination: 'Kolkata',\n    bestRoute: 'NH19 via Dankuni',\n    description: 'Easy and quick return path on NH19.',\n    mapsLink: 'https://www.google.com/maps/dir/Durgapur/Kolkata'\n  }]);\n  const cities = [...new Set(routes.flatMap(route => [route.source, route.destination]))];\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n  const [dynamicMapLink, setDynamicMapLink] = useState('');\n  useEffect(() => {\n    if (selectedSource && selectedDestination && selectedSource !== selectedDestination) {\n      const match = routes.find(route => route.source === selectedSource && route.destination === selectedDestination);\n      setMatchedRoute(match || null);\n      setDynamicMapLink(`https://www.google.com/maps/dir/${encodeURIComponent(selectedSource)}/${encodeURIComponent(selectedDestination)}`);\n    } else {\n      setMatchedRoute(null);\n      setDynamicMapLink('');\n    }\n  }, [selectedSource, selectedDestination, routes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timesaving-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      className: \"background-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/timesaving.mov\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timesaving-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"\\u23F1\\uFE0F Time-Saving Route Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"source\",\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"source\",\n            value: selectedSource,\n            onChange: e => setSelectedSource(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"destination\",\n            value: selectedDestination,\n            onChange: e => setSelectedDestination(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), selectedSource && selectedDestination && selectedSource !== selectedDestination && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Best Route:\", ' ', matchedRoute ? matchedRoute.bestRoute : 'No predefined route found']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: matchedRoute ? matchedRoute.description : 'This route is not predefined, but you can view directions on Google Maps.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-link-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDDFA View on Google Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"map-link\",\n            href: dynamicMapLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [selectedSource, \" \\u2192 \", selectedDestination]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSaving, \"13B5Rwnal3uiQ7KSZ0k6dPP/+5o=\");\n_c = TimeSaving;\nexport default TimeSaving;\nvar _c;\n$RefreshReg$(_c, \"TimeSaving\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSaving","_s","routes","source","destination","bestRoute","description","mapsLink","cities","Set","flatMap","route","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","matchedRoute","setMatchedRoute","dynamicMapLink","setDynamicMapLink","match","find","encodeURIComponent","className","children","autoPlay","loop","muted","playsInline","src","type","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","city","index","href","rel","_c","$RefreshReg$"],"sources":["/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './TimeSaving.css';\n\nfunction TimeSaving() {\n  const [routes] = useState([\n    {\n      source: 'Bengaluru',\n      destination: 'Hyderabad',\n      bestRoute: 'NH44 via Kurnool',\n      description: 'Avoids traffic bottlenecks and ensures smooth travel on NH44.',\n      mapsLink: 'https://www.google.com/maps/dir/Bengaluru/Hyderabad'\n    },\n    {\n      source: 'Hyderabad',\n      destination: 'Bengaluru',\n      bestRoute: 'NH44 via Kurnool',\n      description: 'Best return path via Kurnool with minimum delays.',\n      mapsLink: 'https://www.google.com/maps/dir/Hyderabad/Bengaluru'\n    },\n    {\n      source: 'Mumbai',\n      destination: 'Pune',\n      bestRoute: 'Mumbai-Pune Expressway',\n      description: 'A fast, toll-based expressway ideal for quick intercity trips.',\n      mapsLink: 'https://www.google.com/maps/dir/Mumbai/Pune'\n    },\n    {\n      source: 'Pune',\n      destination: 'Mumbai',\n      bestRoute: 'Mumbai-Pune Expressway',\n      description: 'The expressway provides a direct, time-saving return trip.',\n      mapsLink: 'https://www.google.com/maps/dir/Pune/Mumbai'\n    },\n    {\n      source: 'Chennai',\n      destination: 'Bengaluru',\n      bestRoute: 'NH48 via Vellore',\n      description: 'Best route with highway amenities and fewer diversions.',\n      mapsLink: 'https://www.google.com/maps/dir/Chennai/Bengaluru'\n    },\n    {\n      source: 'Bengaluru',\n      destination: 'Chennai',\n      bestRoute: 'NH48 via Vellore',\n      description: 'Smooth road and efficient travel using NH48.',\n      mapsLink: 'https://www.google.com/maps/dir/Bengaluru/Chennai'\n    },\n    {\n      source: 'Delhi',\n      destination: 'Agra',\n      bestRoute: 'Yamuna Expressway',\n      description: 'Straight and high-speed access to Agra.',\n      mapsLink: 'https://www.google.com/maps/dir/Delhi/Agra'\n    },\n    {\n      source: 'Agra',\n      destination: 'Delhi',\n      bestRoute: 'Yamuna Expressway',\n      description: 'Quick return trip with minimal interruptions.',\n      mapsLink: 'https://www.google.com/maps/dir/Agra/Delhi'\n    },\n    {\n      source: 'Kolkata',\n      destination: 'Durgapur',\n      bestRoute: 'NH19 via Dankuni',\n      description: 'Wide highway with smooth traffic.',\n      mapsLink: 'https://www.google.com/maps/dir/Kolkata/Durgapur'\n    },\n    {\n      source: 'Durgapur',\n      destination: 'Kolkata',\n      bestRoute: 'NH19 via Dankuni',\n      description: 'Easy and quick return path on NH19.',\n      mapsLink: 'https://www.google.com/maps/dir/Durgapur/Kolkata'\n    }\n  ]);\n\n  const cities = [\n    ...new Set(routes.flatMap((route) => [route.source, route.destination]))\n  ];\n\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n  const [dynamicMapLink, setDynamicMapLink] = useState('');\n\n  useEffect(() => {\n    if (selectedSource && selectedDestination && selectedSource !== selectedDestination) {\n      const match = routes.find(\n        (route) =>\n          route.source === selectedSource &&\n          route.destination === selectedDestination\n      );\n      setMatchedRoute(match || null);\n\n      setDynamicMapLink(\n        `https://www.google.com/maps/dir/${encodeURIComponent(\n          selectedSource\n        )}/${encodeURIComponent(selectedDestination)}`\n      );\n    } else {\n      setMatchedRoute(null);\n      setDynamicMapLink('');\n    }\n  }, [selectedSource, selectedDestination, routes]);\n\n  return (\n    <div className=\"timesaving-container\">\n      <video autoPlay loop muted playsInline className=\"background-video\">\n        <source src=\"/timesaving.mov\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div className=\"timesaving-wrapper\">\n        <h2 className=\"heading\">⏱️ Time-Saving Route Suggestions</h2>\n\n        <div className=\"dropdowns\">\n          <div className=\"dropdown\">\n            <label htmlFor=\"source\">Source</label>\n            <select\n              id=\"source\"\n              value={selectedSource}\n              onChange={(e) => setSelectedSource(e.target.value)}\n            >\n              <option value=\"\">Select Source</option>\n              {cities.map((city, index) => (\n                <option key={index} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"dropdown\">\n            <label htmlFor=\"destination\">Destination</label>\n            <select\n              id=\"destination\"\n              value={selectedDestination}\n              onChange={(e) => setSelectedDestination(e.target.value)}\n            >\n              <option value=\"\">Select Destination</option>\n              {cities.map((city, index) => (\n                <option key={index} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {selectedSource && selectedDestination && selectedSource !== selectedDestination && (\n          <>\n            <div className=\"route-result\">\n              <h3>\n                Best Route:{' '}\n                {matchedRoute ? matchedRoute.bestRoute : 'No predefined route found'}\n              </h3>\n              <p>\n                {matchedRoute\n                  ? matchedRoute.description\n                  : 'This route is not predefined, but you can view directions on Google Maps.'}\n              </p>\n            </div>\n\n            <div className=\"map-link-section\">\n              <h4>🗺 View on Google Maps</h4>\n              <a\n                className=\"map-link\"\n                href={dynamicMapLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {selectedSource} → {selectedDestination}\n              </a>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSaving;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}