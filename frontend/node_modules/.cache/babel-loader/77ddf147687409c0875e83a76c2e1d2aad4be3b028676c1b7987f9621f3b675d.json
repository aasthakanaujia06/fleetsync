{"ast":null,"code":"var _jsxFileName = \"/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './TimeSaving.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TimeSaving() {\n  _s();\n  const [routes] = useState([{\n    source: 'Bengaluru',\n    destination: 'Hyderabad',\n    bestRoute: 'NH44 via Kurnool',\n    description: 'Avoids traffic bottlenecks and ensures smooth travel on NH44.'\n  }, {\n    source: 'Hyderabad',\n    destination: 'Bengaluru',\n    bestRoute: 'NH44 via Kurnool',\n    description: 'Best return path via Kurnool with minimum delays.'\n  }, {\n    source: 'Mumbai',\n    destination: 'Pune',\n    bestRoute: 'Mumbai-Pune Expressway',\n    description: 'A fast, toll-based expressway ideal for quick intercity trips.'\n  }, {\n    source: 'Pune',\n    destination: 'Mumbai',\n    bestRoute: 'Mumbai-Pune Expressway',\n    description: 'The expressway provides a direct, time-saving return trip.'\n  }, {\n    source: 'Chennai',\n    destination: 'Bengaluru',\n    bestRoute: 'NH48 via Vellore',\n    description: 'Best route with highway amenities and fewer diversions.'\n  }, {\n    source: 'Bengaluru',\n    destination: 'Chennai',\n    bestRoute: 'NH48 via Vellore',\n    description: 'Smooth road and efficient travel using NH48.'\n  }, {\n    source: 'Delhi',\n    destination: 'Agra',\n    bestRoute: 'Yamuna Expressway',\n    description: 'Straight and high-speed access to Agra.'\n  }, {\n    source: 'Agra',\n    destination: 'Delhi',\n    bestRoute: 'Yamuna Expressway',\n    description: 'Quick return trip with minimal interruptions.'\n  }, {\n    source: 'Kolkata',\n    destination: 'Durgapur',\n    bestRoute: 'NH19 via Dankuni',\n    description: 'Wide highway with smooth traffic.'\n  }, {\n    source: 'Durgapur',\n    destination: 'Kolkata',\n    bestRoute: 'NH19 via Dankuni',\n    description: 'Easy and quick return path on NH19.'\n  }]);\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n  useEffect(() => {\n    const match = routes.find(route => route.source === selectedSource && route.destination === selectedDestination);\n    setMatchedRoute(match || null);\n  }, [selectedSource, selectedDestination]);\n  const sources = [...new Set(routes.map(route => route.source))];\n  const destinations = [...new Set(routes.map(route => route.destination))];\n  const generateGoogleMapsLink = (src, dest) => {\n    const base = 'https://www.google.com/maps/dir/';\n    return `${base}${encodeURIComponent(src)}/${encodeURIComponent(dest)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timesaving-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timesaving-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"\\u23F1\\uFE0F Time-Saving Route Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"source\",\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"source\",\n            value: selectedSource,\n            onChange: e => setSelectedSource(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), sources.map((source, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: source,\n              children: source\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"destination\",\n            value: selectedDestination,\n            onChange: e => setSelectedDestination(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), destinations.map((dest, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dest,\n              children: dest\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), matchedRoute && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Best Route: \", matchedRoute.bestRoute]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: matchedRoute.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-link-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDDFA View on Google Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"map-link\",\n            href: generateGoogleMapsLink(selectedSource, selectedDestination),\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [selectedSource, \" \\u2192 \", selectedDestination]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSaving, \"4y0+VnSNxduRJ69TIbI+fN/Fsa4=\");\n_c = TimeSaving;\nexport default TimeSaving;\nvar _c;\n$RefreshReg$(_c, \"TimeSaving\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSaving","_s","routes","source","destination","bestRoute","description","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","matchedRoute","setMatchedRoute","match","find","route","sources","Set","map","destinations","generateGoogleMapsLink","src","dest","base","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","index","href","rel","_c","$RefreshReg$"],"sources":["/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './TimeSaving.css';\n\nfunction TimeSaving() {\n  const [routes] = useState([\n    {\n      source: 'Bengaluru',\n      destination: 'Hyderabad',\n      bestRoute: 'NH44 via Kurnool',\n      description: 'Avoids traffic bottlenecks and ensures smooth travel on NH44.'\n    },\n    {\n      source: 'Hyderabad',\n      destination: 'Bengaluru',\n      bestRoute: 'NH44 via Kurnool',\n      description: 'Best return path via Kurnool with minimum delays.'\n    },\n    {\n      source: 'Mumbai',\n      destination: 'Pune',\n      bestRoute: 'Mumbai-Pune Expressway',\n      description: 'A fast, toll-based expressway ideal for quick intercity trips.'\n    },\n    {\n      source: 'Pune',\n      destination: 'Mumbai',\n      bestRoute: 'Mumbai-Pune Expressway',\n      description: 'The expressway provides a direct, time-saving return trip.'\n    },\n    {\n      source: 'Chennai',\n      destination: 'Bengaluru',\n      bestRoute: 'NH48 via Vellore',\n      description: 'Best route with highway amenities and fewer diversions.'\n    },\n    {\n      source: 'Bengaluru',\n      destination: 'Chennai',\n      bestRoute: 'NH48 via Vellore',\n      description: 'Smooth road and efficient travel using NH48.'\n    },\n    {\n      source: 'Delhi',\n      destination: 'Agra',\n      bestRoute: 'Yamuna Expressway',\n      description: 'Straight and high-speed access to Agra.'\n    },\n    {\n      source: 'Agra',\n      destination: 'Delhi',\n      bestRoute: 'Yamuna Expressway',\n      description: 'Quick return trip with minimal interruptions.'\n    },\n    {\n      source: 'Kolkata',\n      destination: 'Durgapur',\n      bestRoute: 'NH19 via Dankuni',\n      description: 'Wide highway with smooth traffic.'\n    },\n    {\n      source: 'Durgapur',\n      destination: 'Kolkata',\n      bestRoute: 'NH19 via Dankuni',\n      description: 'Easy and quick return path on NH19.'\n    }\n  ]);\n\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n\n  useEffect(() => {\n    const match = routes.find(\n      (route) =>\n        route.source === selectedSource &&\n        route.destination === selectedDestination\n    );\n    setMatchedRoute(match || null);\n  }, [selectedSource, selectedDestination]);\n\n  const sources = [...new Set(routes.map((route) => route.source))];\n  const destinations = [...new Set(routes.map((route) => route.destination))];\n\n  const generateGoogleMapsLink = (src, dest) => {\n    const base = 'https://www.google.com/maps/dir/';\n    return `${base}${encodeURIComponent(src)}/${encodeURIComponent(dest)}`;\n  };\n\n  return (\n    <div className=\"timesaving-container\">\n      <div className=\"timesaving-wrapper\">\n        <h2 className=\"heading\">⏱️ Time-Saving Route Suggestions</h2>\n\n        <div className=\"dropdowns\">\n          <div className=\"dropdown\">\n            <label htmlFor=\"source\">Source</label>\n            <select\n              id=\"source\"\n              value={selectedSource}\n              onChange={(e) => setSelectedSource(e.target.value)}\n            >\n              <option value=\"\">Select Source</option>\n              {sources.map((source, index) => (\n                <option key={index} value={source}>\n                  {source}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"dropdown\">\n            <label htmlFor=\"destination\">Destination</label>\n            <select\n              id=\"destination\"\n              value={selectedDestination}\n              onChange={(e) => setSelectedDestination(e.target.value)}\n            >\n              <option value=\"\">Select Destination</option>\n              {destinations.map((dest, index) => (\n                <option key={index} value={dest}>\n                  {dest}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {matchedRoute && (\n          <>\n            <div className=\"route-result\">\n              <h3>Best Route: {matchedRoute.bestRoute}</h3>\n              <p>{matchedRoute.description}</p>\n            </div>\n\n            <div className=\"map-link-section\">\n              <h4>🗺 View on Google Maps</h4>\n              <a\n                className=\"map-link\"\n                href={generateGoogleMapsLink(selectedSource, selectedDestination)}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {selectedSource} → {selectedDestination}\n              </a>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSaving;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}