{"ast":null,"code":"var _jsxFileName = \"/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './TimeSaving.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimeSaving() {\n  _s();\n  const [routes, setRoutes] = useState([{\n    source: 'Bengaluru',\n    destination: 'Hyderabad',\n    bestRoute: 'NH44 via Kurnool',\n    description: 'This route avoids traffic hotspots and offers consistent highway driving.'\n  }, {\n    source: 'Mumbai',\n    destination: 'Pune',\n    bestRoute: 'Mumbai-Pune Expressway',\n    description: 'A smooth 6-lane expressway known for fast intercity travel.'\n  }, {\n    source: 'Chennai',\n    destination: 'Bengaluru',\n    bestRoute: 'NH48 via Vellore',\n    description: 'NH48 offers the fastest route with good road conditions and amenities.'\n  }, {\n    source: 'Delhi',\n    destination: 'Agra',\n    bestRoute: 'Yamuna Expressway',\n    description: 'A high-speed route ideal for quick travel with toll access.'\n  }, {\n    source: 'Kolkata',\n    destination: 'Durgapur',\n    bestRoute: 'NH19 via Dankuni',\n    description: 'A well-maintained highway with minimal congestion.'\n  }]);\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n  useEffect(() => {\n    const match = routes.find(route => route.source === selectedSource && route.destination === selectedDestination);\n    setMatchedRoute(match || null);\n  }, [selectedSource, selectedDestination]);\n  const sources = [...new Set(routes.map(route => route.source))];\n  const destinations = [...new Set(routes.map(route => route.destination))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timesaving-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timesaving-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"\\u23F1\\uFE0F Time-Saving Route Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"source\",\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"source\",\n            value: selectedSource,\n            onChange: e => setSelectedSource(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), sources.map((source, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: source,\n              children: source\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"destination\",\n            value: selectedDestination,\n            onChange: e => setSelectedDestination(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), destinations.map((dest, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dest,\n              children: dest\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), matchedRoute ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Best Route: \", matchedRoute.bestRoute]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: matchedRoute.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : selectedSource && selectedDestination && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-match\",\n        children: \"No optimized route found for this pair.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSaving, \"Hu7ohMMh/TdFWqCFwjzMqqOyunk=\");\n_c = TimeSaving;\nexport default TimeSaving;\nvar _c;\n$RefreshReg$(_c, \"TimeSaving\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TimeSaving","_s","routes","setRoutes","source","destination","bestRoute","description","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","matchedRoute","setMatchedRoute","match","find","route","sources","Set","map","destinations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","index","dest","_c","$RefreshReg$"],"sources":["/Users/abhijitbiswal/Downloads/Fleet2/frontend/src/pages/TimeSaving.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './TimeSaving.css';\n\nfunction TimeSaving() {\n  const [routes, setRoutes] = useState([\n    {\n      source: 'Bengaluru',\n      destination: 'Hyderabad',\n      bestRoute: 'NH44 via Kurnool',\n      description: 'This route avoids traffic hotspots and offers consistent highway driving.'\n    },\n    {\n      source: 'Mumbai',\n      destination: 'Pune',\n      bestRoute: 'Mumbai-Pune Expressway',\n      description: 'A smooth 6-lane expressway known for fast intercity travel.'\n    },\n    {\n      source: 'Chennai',\n      destination: 'Bengaluru',\n      bestRoute: 'NH48 via Vellore',\n      description: 'NH48 offers the fastest route with good road conditions and amenities.'\n    },\n    {\n      source: 'Delhi',\n      destination: 'Agra',\n      bestRoute: 'Yamuna Expressway',\n      description: 'A high-speed route ideal for quick travel with toll access.'\n    },\n    {\n      source: 'Kolkata',\n      destination: 'Durgapur',\n      bestRoute: 'NH19 via Dankuni',\n      description: 'A well-maintained highway with minimal congestion.'\n    }\n  ]);\n\n  const [selectedSource, setSelectedSource] = useState('');\n  const [selectedDestination, setSelectedDestination] = useState('');\n  const [matchedRoute, setMatchedRoute] = useState(null);\n\n  useEffect(() => {\n    const match = routes.find(\n      (route) =>\n        route.source === selectedSource && route.destination === selectedDestination\n    );\n    setMatchedRoute(match || null);\n  }, [selectedSource, selectedDestination]);\n\n  const sources = [...new Set(routes.map(route => route.source))];\n  const destinations = [...new Set(routes.map(route => route.destination))];\n\n  return (\n    <div className=\"timesaving-container\">\n      <div className=\"timesaving-wrapper\">\n        <h2 className=\"heading\">⏱️ Time-Saving Route Suggestions</h2>\n\n        <div className=\"dropdowns\">\n          <div className=\"dropdown\">\n            <label htmlFor=\"source\">Source</label>\n            <select\n              id=\"source\"\n              value={selectedSource}\n              onChange={(e) => setSelectedSource(e.target.value)}\n            >\n              <option value=\"\">Select Source</option>\n              {sources.map((source, index) => (\n                <option key={index} value={source}>\n                  {source}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"dropdown\">\n            <label htmlFor=\"destination\">Destination</label>\n            <select\n              id=\"destination\"\n              value={selectedDestination}\n              onChange={(e) => setSelectedDestination(e.target.value)}\n            >\n              <option value=\"\">Select Destination</option>\n              {destinations.map((dest, index) => (\n                <option key={index} value={dest}>\n                  {dest}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {matchedRoute ? (\n          <div className=\"route-result\">\n            <h3>Best Route: {matchedRoute.bestRoute}</h3>\n            <p>{matchedRoute.description}</p>\n          </div>\n        ) : (\n          selectedSource &&\n          selectedDestination && (\n            <p className=\"no-match\">No optimized route found for this pair.</p>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSaving;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}